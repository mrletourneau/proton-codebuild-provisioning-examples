infrastructure:
  templates:
    - rendering_engine: codebuild
      settings:
        image: aws/codebuild/standard:6.0
        runtimes:
          golang: 1.18
        env:
          variables:
            TF_VERSION: 1.3.9

        provision:
          # get proton input parameters
          - cat proton-inputs.json
          - export PROTON_ENV=$(cat proton-inputs.json | jq '.environment.name' -r)

          # build bucket name for this environment
          - export ACCOUNT=$(aws sts get-caller-identity --query "Account" --output text)
          - export TF_STATE_BUCKET=terrform-remote-state-${ACCOUNT}-${PROTON_ENV}
          - export KEY=env.tfstate

          # install terraform cli
          - echo "Installing Terraform CLI ${TF_VERSION}"
          - chmod +x ./install-terraform.sh && ./install-terraform.sh ${TF_VERSION}

          # provision an s3 bucket using terraform to store tf remote state
          # for this environment and all of its associated service instances
          - cd s3-bucket && terraform init && terraform apply -auto-approve -var="name=${TF_STATE_BUCKET}"

          # provision vpc/ecs resources, storing state in the environment s3 bucket
          - cd ../
          - echo "terraform remote state = s3://${TF_STATE_BUCKET}/${KEY}"
          - terraform init -backend-config="bucket=${TF_STATE_BUCKET}" -backend-config="key=${KEY}"
          - terraform apply -var-file=proton-inputs.json -var="tf_state_bucket=${TF_STATE_BUCKET}" -auto-approve

          # pass terraform output to proton
          - chmod +x ./output.sh && ./output.sh

        deprovision:
          # get proton input parameters
          - cat proton-inputs.json
          - export PROTON_ENV=$(cat proton-inputs.json | jq '.environment.name' -r)
          - echo "FAILING THIS ON PORPOISE üê¨" && exit 1

          # build bucket name
          - export ACCOUNT=$(aws sts get-caller-identity --query "Account" --output text)
          - export TF_STATE_BUCKET=terrform-remote-state-${ACCOUNT}-${PROTON_ENV}
          - export KEY=env.tfstate

          # install terraform cli
          - echo "Installing Terraform CLI ${TF_VERSION}"
          - chmod +x ./install-terraform.sh && ./install-terraform.sh ${TF_VERSION}

          # destroy environment
          - echo "terraform remote state = s3://${TF_STATE_BUCKET}/${KEY}"
          - terraform init -backend-config="bucket=${TF_STATE_BUCKET}" -backend-config="key=${KEY}"
          - terraform destroy -var-file=proton-inputs.json -var="tf_state_bucket=${TF_STATE_BUCKET}" -auto-approve
